{"ast":null,"code":"import { RouterModule, PreloadAllModules } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'settings',\n  loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule)\n}, {\n  path: 'profile',\n  loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule)\n}, {\n  path: 'editor',\n  loadChildren: () => import('./editor/editor.module').then(m => m.EditorModule)\n}, {\n  path: 'article',\n  loadChildren: () => import('./article/article.module').then(m => m.ArticleModule)\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static #_ = this.Éµfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n    static #_2 = this.Éµmod = /*@__PURE__*/i0.ÉµÉµdefineNgModule({\n      type: AppRoutingModule\n    });\n    static #_3 = this.Éµinj = /*@__PURE__*/i0.ÉµÉµdefineInjector({\n      imports: [RouterModule.forRoot(routes, {\n        // preload all modules; optionally we could\n        // implement a custom preloading strategy for just some\n        // of the modules (PRs welcome ðŸ˜‰)\n        preloadingStrategy: PreloadAllModules\n      }), RouterModule]\n    });\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}