{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { ArticlesService, UserService } from '../core';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core\";\nimport * as i2 from \"@angular/router\";\nexport let EditableArticleResolver = /*#__PURE__*/(() => {\n  class EditableArticleResolver {\n    constructor(articlesService, router, userService) {\n      this.articlesService = articlesService;\n      this.router = router;\n      this.userService = userService;\n    }\n\n    resolve(route, state) {\n      return this.articlesService.get(route.params['slug']).pipe(map(article => {\n        if (this.userService.getCurrentUser().username === article.author.username) {\n          return article;\n        } else {\n          this.router.navigateByUrl('/');\n        }\n      }), catchError(err => this.router.navigateByUrl('/')));\n    }\n\n  }\n\n  EditableArticleResolver.ɵfac = function EditableArticleResolver_Factory(t) {\n    return new (t || EditableArticleResolver)(i0.ɵɵinject(i1.ArticlesService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1.UserService));\n  };\n\n  EditableArticleResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EditableArticleResolver,\n    factory: EditableArticleResolver.ɵfac\n  });\n  return EditableArticleResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}