{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfilesService, UserService } from '../../core';\nimport { concatMap, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"disabled\": a0,\n    \"btn-outline-secondary\": a1,\n    \"btn-secondary\": a2\n  };\n};\n\nexport let FollowButtonComponent = /*#__PURE__*/(() => {\n  class FollowButtonComponent {\n    constructor(profilesService, router, userService) {\n      this.profilesService = profilesService;\n      this.router = router;\n      this.userService = userService;\n      this.toggle = new EventEmitter();\n      this.isSubmitting = false;\n    }\n\n    toggleFollowing() {\n      this.isSubmitting = true; // TODO: remove nested subscribes, use mergeMap\n\n      this.userService.isAuthenticated.pipe(concatMap(authenticated => {\n        // Not authenticated? Push to login screen\n        if (!authenticated) {\n          this.router.navigateByUrl('/login');\n          return of(null);\n        } // Follow this profile if we aren't already\n\n\n        if (!this.profile.following) {\n          return this.profilesService.follow(this.profile.username).pipe(tap(data => {\n            this.isSubmitting = false;\n            this.toggle.emit(true);\n          }, err => this.isSubmitting = false)); // Otherwise, unfollow this profile\n        } else {\n          return this.profilesService.unfollow(this.profile.username).pipe(tap(data => {\n            this.isSubmitting = false;\n            this.toggle.emit(false);\n          }, err => this.isSubmitting = false));\n        }\n      })).subscribe();\n    }\n\n  }\n\n  FollowButtonComponent.ɵfac = function FollowButtonComponent_Factory(t) {\n    return new (t || FollowButtonComponent)(i0.ɵɵdirectiveInject(i1.ProfilesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.UserService));\n  };\n\n  FollowButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FollowButtonComponent,\n    selectors: [[\"app-follow-button\"]],\n    inputs: {\n      profile: \"profile\"\n    },\n    outputs: {\n      toggle: \"toggle\"\n    },\n    decls: 3,\n    vars: 7,\n    consts: [[1, \"btn\", \"btn-sm\", \"action-btn\", 3, \"ngClass\", \"click\"], [1, \"ion-plus-round\"]],\n    template: function FollowButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function FollowButtonComponent_Template_button_click_0_listener() {\n          return ctx.toggleFollowing();\n        });\n        i0.ɵɵelement(1, \"i\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, ctx.isSubmitting, !ctx.profile.following, ctx.profile.following));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" \\u00A0 \", ctx.profile.following ? \"Unfollow\" : \"Follow\", \" \", ctx.profile.username, \"\\n\");\n      }\n    },\n    dependencies: [i3.NgClass],\n    encapsulation: 2\n  });\n  return FollowButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}