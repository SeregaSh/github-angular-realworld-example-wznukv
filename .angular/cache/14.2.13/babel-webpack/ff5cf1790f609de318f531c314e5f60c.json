{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction ListErrorsComponent_ul_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r2, \" \");\n  }\n}\n\nfunction ListErrorsComponent_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 1);\n    i0.ɵɵtemplate(1, ListErrorsComponent_ul_0_li_1_Template, 2, 1, \"li\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errorList);\n  }\n}\n\nexport let ListErrorsComponent = /*#__PURE__*/(() => {\n  class ListErrorsComponent {\n    constructor() {\n      this.formattedErrors = [];\n    }\n\n    set errors(errorList) {\n      this.formattedErrors = Object.keys(errorList.errors || {}).map(key => `${key} ${errorList.errors[key]}`);\n    }\n\n    get errorList() {\n      return this.formattedErrors;\n    }\n\n  }\n\n  ListErrorsComponent.ɵfac = function ListErrorsComponent_Factory(t) {\n    return new (t || ListErrorsComponent)();\n  };\n\n  ListErrorsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListErrorsComponent,\n    selectors: [[\"app-list-errors\"]],\n    inputs: {\n      errors: \"errors\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"error-messages\", 4, \"ngIf\"], [1, \"error-messages\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ListErrorsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ListErrorsComponent_ul_0_Template, 2, 1, \"ul\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.errorList);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf],\n    encapsulation: 2\n  });\n  return ListErrorsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}