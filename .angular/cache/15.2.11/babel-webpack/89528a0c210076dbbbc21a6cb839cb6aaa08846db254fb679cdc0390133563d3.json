{"ast":null,"code":"import { UntypedFormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../core\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../shared/list-errors.component\";\nexport let SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor(router, userService, fb) {\n      this.router = router;\n      this.userService = userService;\n      this.fb = fb;\n      this.user = {};\n      this.errors = {};\n      this.isSubmitting = false;\n      // create form group using the form builder\n      this.settingsForm = this.fb.group({\n        image: '',\n        username: '',\n        bio: '',\n        email: '',\n        password: ''\n      });\n      // Optional: subscribe to changes on the form\n      // this.settingsForm.valueChanges.subscribe(values => this.updateUser(values));\n    }\n\n    ngOnInit() {\n      // Make a fresh copy of the current user's object to place in editable form fields\n      Object.assign(this.user, this.userService.getCurrentUser());\n      // Fill the form\n      this.settingsForm.patchValue(this.user);\n    }\n    logout() {\n      this.userService.purgeAuth();\n      this.router.navigateByUrl('/');\n    }\n    submitForm() {\n      this.isSubmitting = true;\n      // update the model\n      this.updateUser(this.settingsForm.value);\n      this.userService.update(this.user).subscribe(updatedUser => this.router.navigateByUrl('/profile/' + updatedUser.username), err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      });\n    }\n    updateUser(values) {\n      Object.assign(this.user, values);\n    }\n    static #_ = this.ɵfac = function SettingsComponent_Factory(t) {\n      return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SettingsComponent,\n      selectors: [[\"app-settings-page\"]],\n      decls: 25,\n      vars: 3,\n      consts: [[1, \"settings-page\"], [1, \"container\", \"page\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"col-xs-12\"], [1, \"text-xs-center\"], [3, \"errors\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"URL of profile picture\", \"formControlName\", \"image\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", 1, \"form-control\", \"form-control-lg\"], [\"rows\", \"8\", \"placeholder\", \"Short bio about you\", \"formControlName\", \"bio\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"password\", \"placeholder\", \"New Password\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"pull-xs-right\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"]],\n      template: function SettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n          i0.ɵɵtext(5, \"Your Settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"app-list-errors\", 5);\n          i0.ɵɵelementStart(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.submitForm();\n          });\n          i0.ɵɵelementStart(8, \"fieldset\", 7)(9, \"fieldset\", 8);\n          i0.ɵɵelement(10, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"fieldset\", 8);\n          i0.ɵɵelement(12, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"fieldset\", 8)(14, \"textarea\", 11);\n          i0.ɵɵtext(15, \"              \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"fieldset\", 8);\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"fieldset\", 8);\n          i0.ɵɵelement(19, \"input\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 14);\n          i0.ɵɵtext(21, \" Update Settings \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(22, \"hr\");\n          i0.ɵɵelementStart(23, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_23_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵtext(24, \" Or click here to logout. \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"errors\", ctx.errors);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.ListErrorsComponent],\n      encapsulation: 2\n    });\n  }\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}